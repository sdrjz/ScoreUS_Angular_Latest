var Stepper = require('../lib/stepper').Stepper;

var grouper = new Grouper();

// setup group functions
grouper.add(function(fn) {
    console.log('grouper - running step 1 (async)');
    console.log('grouper - wait 3 seconds...');
    setTimeout(function() {
        console.log('grouper - completed step 1 (async)');
        fn(null, 1);
    }, (1000 * 3));
});
grouper.add(function(fn) {
    console.log('grouper - running step 2 (async)');
    console.log('grouper - wait 2 seconds...');
    setTimeout(function() {
        console.log('grouper - completed step 2 (async)');
        fn(null, 2);
    }, (1000 * 2));
});
grouper.add(function(fn) {
    console.log('grouper - running step 3 (async)');
    console.log('grouper - wait 1 second...');
    setTimeout(function() {
        console.log('grouper - completed step 3 (async)');
        fn(null, 3);
    }, (1000));
});

// handle completion
var onComplete = function(err, vals) {
    if (err) throw err;
    console.log('grouper - group is complete');
    console.log('grouper - return values: ' + vals + '\n');
};

var stepper = new Stepper();

// add steps
stepper.add(function(err, val) {
    console.log('stepper - running step 1 (sync)');
    return 1;
});
stepper.add(function(err, val) {
    if (err) throw err;
    console.log('stepper - running step 2 (sync)');
    return 2;
});
stepper.add(grouper);
stepper.add(function(err, val) {
    if (err) throw err;
    console.log('stepper - running step 3 (async)');
    var self = this;
    console.log('stepper - wait 2 seconds...');
    setTimeout(function() {
        console.log('stepper - completed step 3 (async)');
        self();
    }, 2000);
});
stepper.add(function(err, val) {
    console.log('stepper - running step 4 (sync)');
    return 4;
});

// handle completion
var onComplete = function(err, val) {
    if (err) throw err;
    console.log('stepper - stepping is complete');
    console.log('stepper - return value: ' + val + '\n');    
};

// run steps
console.log('\nstepper - start stepping...');
stepper.walk(onComplete);
